extend type Mutation {
  createOrder(data: OrderInput): Boolean
  changeOrderStatus(data: ChangeOrderInput): Boolean
  addOrderItem(orderId: Int!, data: CartItemInput): Boolean
  markOrderItemStatus(id: Int!, status: StatusOrderItem): Boolean
  increaseOrderItem(id: Int!): Boolean
  decreaseOrderItem(id: Int!): Boolean
  generateTokenOrder(set: Int!): String
}

extend type Query {
  orderList(
    offset: Int = 0
    limit: Int = 25
    viewBy: OrderViewBy
    status: [StatusOrder]
    orderId: String
  ): [Order]
  order(id: Int, token: String): Order
}

type Order {
  id: Int
  name: String
  address: String
  set: String
  status: StatusOrder
  uuid: String
  items: [OrderItem]
  total: String
  paid: String
  note: String
}

type OrderItem {
  id: Int
  sku: SKU
  price: Float
  qty: Int
  discount: Float
  status: StatusOrderItem
  addons: String
  remark: String
  product: Product
}

input OrderInput {
  name: String
  uuid: String
  address: String
  set: String
  carts: [CartItemInput]
}

input CartItemInput {
  skuId: Int
  productId: Int
  price: Float
  qty: Int
  discount: Float
  addons: String
  remark: String
}

input ChangeOrderInput {
  orderId: Int!
  id: Int
  status: StatusOrder
  itemStatus: StatusOrderItem
  reason: String
}

enum StatusOrder {
  PENDING
  VERIFY
  DELIVERY
  CHECKOUT
  CANCELLED
}

enum StatusOrderItem {
  PENDING
  MAKING
  OUT_OF_STOCK
  REQUEST_CHANGE
  COMPLETED
  DELETED
}

enum OrderViewBy {
  KITCHEN
  ADMIN
  USER
}
