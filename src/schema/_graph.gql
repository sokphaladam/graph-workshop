scalar JSON
scalar JSONObject

type Book {
  title: String
  author: String
}

type Mutation {
  login(username: String!, password: String!): String
  testSubscription(str: String): Boolean
  createUser(data: UserInput): Boolean
  updateUser(id: Int!, data: UserInput): Boolean
}

type Subscription {
  newOrderPending(channel: String = "ADMIN_CHANNEL"): String
  orderSubscript(channel: String = "ADMIN_CHANNEL"): JSON
}

type Query {
  books: [Book]
  userList(offset: Int = 0, limit: Int = 25, roles: [Int]): [User]
  user(id: Int!): User
  me: User
  roleList: [Role]
}

input UserInput {
  display: String
  contact: String
  gender: String
  roleId: Int
  createdDate: String
  isActive: Boolean
  ownerId: String
  startingAt: String
  bankName: String
  bankAcc: String
  bankType: String
  position: String
  baseSalary: String
  type: String
  profile: String
  dob: String

  # User login
  username: String
  password: String
}

type User {
  id: Int!
  display: String
  contact: String
  gender: String
  role: Role
  createdDate: String
  isActive: Boolean
  ownerId: String
  startingAt: String
  bankName: String
  bankAcc: String
  bankType: String
  position: String
  baseSalary: String
  type: String
  profile: String
  dob: String

  # User login
  username: String
  password: String
}

type Role {
  id: Int
  name: String
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
